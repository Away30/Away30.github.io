<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>电影票根博物馆</title>
    <link href="/2023/01/23/%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%A0%B9%E5%8D%9A%E7%89%A9%E9%A6%86/"/>
    <url>/2023/01/23/%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%A0%B9%E5%8D%9A%E7%89%A9%E9%A6%86/</url>
    
    <content type="html"><![CDATA[<h2 id="流浪地球2">《流浪地球2》</h2><p><img src="/img/流浪地球2%201.png" /> <img src="/img/流浪地球2%202.jpg" /> <img src="/img/流浪地球2%203.jpg" /> <img src="/img/流浪地球2%204.jpg" /> 中国人才能写出的科幻故事，以好莱坞的视觉效果呈现 太空电梯，空间站，数字生命计划… 中式的硬核浪漫，中式的星际穿越 不是老套的单枪匹马的英雄主义，而是宏大的人类命运共同体 老戏骨们的演技对于这部电影是点睛之笔，使整部戏活了过来，李雪健的决断，刘德华对女儿的爱，以及沙溢作为引爆员出列时的坚毅 整体上瑕不掩瑜，中国科幻电影的又一里程碑 观于2023.1.22</p><p>\\</p><h2 id="满江红">《满江红》</h2><p><img src="/img/满江红.png" /> 老谋子对大场面的把握确实是好，结尾的全军背诵满江红让人热血沸腾 整体节奏把握不错，每个场景用俯拍的跑动以及音乐衔接 但是感觉前半部分是剧本杀一般，一些反转也能猜到，而最后背诵满江红和前面的剧情感觉联系较弱。 总体还是一部不错的影片 观于2023.1.25</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感想</tag>
      
      <tag>电影</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>托福单词（更新）</title>
    <link href="/2022/10/19/%E6%89%98%E7%A6%8F%E5%8D%95%E8%AF%8D/"/>
    <url>/2022/10/19/%E6%89%98%E7%A6%8F%E5%8D%95%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="单词">单词</h2>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>托福</tag>
      
      <tag>英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>野马优化器算法</title>
    <link href="/2022/06/08/%E9%87%8E%E9%A9%AC%E4%BC%98%E5%8C%96%E5%99%A8%E7%AE%97%E6%B3%95/"/>
    <url>/2022/06/08/%E9%87%8E%E9%A9%AC%E4%BC%98%E5%8C%96%E5%99%A8%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="开始">开始</h2><p>  还记得那是一个普通的周末，为了应付老师的要求，不得不重新去看新的算法论文，然后就看到了这个野马优化器算法，2021年提出的，也算是一种缘分吧。</p><h2 id="引言">引言</h2><p>  算法由Iraj Naruei等人于2021年提出，主要模拟了野马种群的放牧、交配、领导者的交流和选择这三种行为。因其在CEC2017、CEC2019等测试函数上具有较好的实验结果，而在未来具有广泛的应用前景。</p><p>  总体来说，马可以根据其社会组织（领土和非领土）分为两类，在本篇文章，我们重点在于非领土类，它们是由稳定的家庭群体或后宫组成的马群，如小马驹、种马和母马。种马和母马都生活在一起，并在放牧中相互影响。同时为了防止乱伦，小马驹长大后必须离开他们的群体，加入其他群体建立自己的家庭。野马优化器就是使用放牧、交配、领导者的交流和选择这三种行为对问题进行优化。</p><h2 id="主要步骤及过程">主要步骤及过程</h2><p><strong>1.</strong> 创建初始种群并形成马群并选择领导者； <strong>2.</strong> 马的放牧行为； <strong>3.</strong> 马的交配行为； <strong>4.</strong> 由领导（种马）领导和领导小组； <strong>5.</strong> 领导交流和选拔。</p><h3 id="创建初始种群">创建初始种群</h3>  对初始马群进行分组，如果N是总体的成员数，则组数为是G=[N×PS]. PS 是总种群中种马的百分比。所以我们根据组的数量分出领导者G（种马），其余成员（N - G），在这些组中平均分配。在算法开始时随机选择组的领导者，在后期阶段，根据组成员之间的适应度（最佳适应度函数）来选择他们。 <img src="/img/野马优化器.png" /><center>种群初始化示意图</center><img src="/img/野马优化器2.png" /><center>原始种群形成群体的过程图</center><h3 id="放牧行为">放牧行为</h3><p>  如上一节所述，小马驹通常大部分时间都在他们的群体周围吃草。为了实现放牧行为，我们将种马视为放牧区的中心，群体成员在中心周围搜索（放牧）： <span class="math display">\[X_{G, j}^{i}=2 Z \cos (2 \pi R Z) \times\left(\text { Stallion }_{G, j}-X_{G, j}^{i}\right)+\text { Stallion }_{G, j}\]</span>   式中Stallion为领导者的位置，R 为[-2,2]内的随机数，主要控制个体与领导者间的角度，自适应机制Z 的计算方式为：</p><p><span class="math display">\[P=\vec{R} 1&lt;T D R, I D X=(P==0) ; \quad Z=R 2 \Theta I D X+\vec{R} 3 \Theta(\sim I D X)\]</span></p><p>  其中P 是由0和1组成的向量，R1、R3均为[0,1]范围内均匀分布的随机向量，R2为[0,1]内一随机值。满足条件(P==0)的随机向量R1返回的IDX索引。Θ这个符号即点乘。TDR为由1线性递减至0的系数：</p><p><span class="math display">\[TDR=1-iter\times （\frac{1}{maxiter} ）\]</span></p><p>其中<em>iter</em>为当前迭代次数，<em>maxite</em>r为最大迭代次数。</p><h3 id="交配行为">交配行为</h3><p>  与其他动物相比，马的独特行为之一是将小马驹从群体中分离出来并与它们交配的行为。小马驹在青春期前离开这个群体，雄性小马驹加入单身马群，雌性小马驹加入另一个家庭群体，以达到青春期并寻找配偶。为了模拟马的交配行为，使用公式：</p><p><span class="math display">\[X_{G, k}^{p}=\operatorname{Crossover}\left(X_{G, i}^{q}, X_{G, j}^{z}\right), i \neq j \neq k, q=z=\text { end }\]</span></p><p>  这里Xp_G_K表示种群k中个体p离群后再次进入种群k的个体位置，所以很明显，后面括号里的两个位置即为其父母的位置。可以看出，此阶段主要针对种群内适应度值最差的个体进行操作，目的即为提升种群多样性。</p><h3 id="集团领导">集团领导</h3><p>  领导者（种马）将带领其他组成员到合适的区域（水坑）。领导者（种马）也将争夺水坑，带领优势组首先使用水坑，直到优势组离开，其他组才能使用水坑。用公式模拟此行为：</p><p><span class="math display">\[\overline{\text { Stallion }} G, j=\left\{\begin{array}{l}2 Z \cos (2 \pi R Z) \times\left(W H-\text { Stallion }_{G, j}\right)+W H, \text { rand }&gt;0.5 \\ 2 Z \cos (2 \pi R Z) \times\left(W H-\text { Stallion }_{G, j}\right)-W H, \text { rand } \leq 0.5\end{array}\right.\]</span></p><p>  式中WH为栖息地的位置(也就是当前最优个体位置)，R、Z 的定义与前文相同。下图展示了领导者相对于栖息地的位置更新过程：</p><img src="/img/野马优化器3.png" /><center>领导者相对于栖息地的位置更新</center><h3 id="领导交流与选拔">领导交流与选拔</h3><p>  在开始，领导者是随机选择的。之后，比较组中马驹的适应度值选择领导者。为了模拟领导交流与选拔，使用了公式：</p><p><span class="math display">\[\mathrm{Stallion} _{G,j}=\begin{cases}  X_{G,j} &amp; \text{ if } cost(X_{G,j})&lt; cost({Stallion} _{G,j})\\  {Stallion} _{G,j}&amp; \text{ if } cost(X_{G,j})&gt; cost({Stallion} _{G,j})\end{cases}\]</span></p>此处cost函数为适应度函数，算法伪代码如下： <img src="/img/野马优化器4.png" /><center>伪代码</center><h2 id="总结">总结</h2><p>  总体来说，野马优化器考虑的较为全面，涉及了精英引导、分群探索、群间交流等方面。不过从测试中来看其跳出局部最优值的能力仍有待提高。对于数据集的处理仍存在较大问题，迭代后期容易陷入局部极值的问题。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>元启发算法</tag>
      
      <tag>论文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>歌词集（持续更新）</title>
    <link href="/2022/03/21/%E6%AD%8C%E8%AF%8D%E9%9B%86%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <url>/2022/03/21/%E6%AD%8C%E8%AF%8D%E9%9B%86%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="歌词集">歌词集</h1><p>一句歌词，便是一段故事</p><h2 id="wtf">《WTF》</h2><p>If there's a meanin'to my life then why the hell am I so lost 如果我的人生充满意义那为什么我感到如此迷惘 Sometimes I got a hard time believin'dreams are worth chasin' 有时候我无法相信梦想值得追寻 ——Sasha Alex Sloan《WTF》</p><p>3.25：有时总是会因为一些小事而失去信心，希望这只是暂时的，敬这该死的世界</p><h2 id="this-city">《This city》</h2><p>This city's gonna love me then leave me alone 这座城市真心爱我又狠心丢下我 This city's got me chasing stars 这座城市让我满怀希望追逐梦想 It's been a couple months since felt like I'm home 已经好几个月没有感受到家的温暖 Am I getting closer to knowing where I belong 我是不是即将知晓自己归属于何方 ——Sam Fischer《This city》</p><p>3.27：好久没有听到这么好听的歌了，富有穿透力的嗓音诉说着城市的落寞。仿佛看到歌者独自一人在城市中挣扎，追逐梦想但又被抛弃，黑夜中茫茫人群，摩肩继踵，路灯，香烟，霓虹，我又会迷失在哪座城市呢？</p><h2 id="sunset-jesus">《Sunset Jesus》</h2><p>Sunset Jesus came to me 日落耶酥来到我身边吧 He once was waiter now he's a savior making money on the street 他曾是一名侍者 现在是救世主 在街上谋生 ——Avicii《Sunset Jesus》</p><p>3.29：这首a神的歌现在才听到属实可惜啊，也算冷门的歌曲，熟悉的flow，钢琴加电音，也就a神可以做到了吧，乐观的歌词，谁知道自己之后怎么样呢？就连耶稣也曾做过侍者。</p><h2 id="sunset-jesus-1">《Sunset Jesus》</h2><p>My dreams are made of gold 我怀有金光闪闪的远大梦想 My heart's been broken and I'm down along the road 沿着漫漫长路前行心已破碎 But I know my dreams keep fading 'til I get old 但是我知道随着年纪的增加我的梦想也在渐渐褪色 Breathe for a minute breathe for a minute I'll be okay 深呼吸一会我会没事的 ——Avicii《Sunset Jesus》 3.30：a神的歌永远是那么的励志，总能鼓舞我前行，I'll be okay！</p><h2 id="barcelona-night">《Barcelona Night》</h2><p>It's been way too long 距离那段时光已经太久 City by the sea 你我在这座海边的城市 Haunted by cathedrals 高耸的教堂 Shadows in the breeze 萦绕着风中的记忆 Feeling right at home 街上的人们 People on the streets 如从前一样自在 Painted in a language 他们哼唱起旋律 ——Limón Limón《Barcelona Night》</p><p>4.4：可太喜欢这种节奏了，犹如置身于海边，夏日的傍晚，微醺的海风，走在落日的大街上，谈着一场永不落幕的爱情，结尾的女声是点睛之笔，电话中慵懒的声音，诉说这爱意。什么时候能去巴塞罗那看看呢，在这疫情之下却只是空想罢了，什么时候能回到过去呢？街上的人们，如从前一样自在，他们哼唱起旋律......</p><h2 id="sos">《SOS》</h2><p>Can you hear me SOS 你听得见我的求救吗？ Help me put my mind to rest 帮我放下心中的杂念 ——Avicii《SOS》</p><p>4.20：four years since you said goodbye，avicii forever！多希望我还能和以前的少年一样，耳机一带放着a神的歌，和朋友嬉戏打闹，那样的日子似乎一去不复返了。越来越感觉到社会的压力，那个童真的我慢慢被剥离，只能借a神的歌帮我放下杂念。</p><h2 id="dont-look-back-in-anger">《Don't Look Back In Anger》</h2><p>But don't look back in anger don't look back in anger 人生若只如初见莫再悲愤回顾往昔 heard you say 我听到你说 At least not today 至少今日莫失态 —— Oasis《Don't Look Back In Anger》</p><p>5.17：绿洲的歌真是白听不厌啊，开场的钢琴直接挡不住，Don't Look Back In Anger，不要为往事悲伤难过，请往前看。</p><h2 id="chasing-pavements">《Chasing Pavements》</h2><p>Should I give up 我应该放弃吗 Or should I just keep chasin'pavements 还是应该继续坚持这条路 Even if it leads nowhere 即使没有任何结果 —— Adele《Chasing Pavements》</p><p>5.21 马上就要答辩了，迷茫，总感觉自己没有那么厉害，能力如此，应该放弃吗？</p><h2 id="stan">《Stan》</h2><p>My tea's gone cold I'm wondering why I 茶越来越凉我不知道为什么 Got out of bed at all 我始终辗转难眠 The morning rain clouds up my window 清晨的雨遮住了我的窗 And can't see at all 我根本就看不见 And even if could it'd all be gray 我能看见的全都是灰色的 —— Eminem/Dido《Stan》</p><p>6.10 下雨天听这首歌总有一种别样的悲情，蒂朵女声忧郁的唱腔加上姆爷的rap注定让这首歌不平凡。</p><h2 id="seasons">《Seasons》</h2><p>l just stopped for a second l reason 我只会稍作停留 这是我为自己找的借口 l move forward like the seasons 我想要继续前行 却像四季更迭那样 徘徊不前 —— Greyson Chance《Seasons》</p><p>7.31 人生发生的好多事都好像循环，你明知如此，却深陷其中。</p><h2 id="all-i-need-to-hear">《All I Need To Hear》</h2><p>I don't need the crowds and the cheers 我不需要摩肩接踵的观众也不需要热烈的欢呼 Just tell me you love me 请告诉我你深爱着我 'Cause that's all that need to hear 因为这就是我渴望听到的深情告白 —— The 1975《All I Need To Hear》</p><p>9.21 本年度不可多得的深情好歌，马老师性感的声线配上慢节奏的贝斯，浓浓的1975的味道。</p><h2 id="sunrise">《Sunrise》</h2><p>follow the moon 我跟随月亮的脚步 From the dark to the break of dawn 从黑夜直到黎明 We let it loose 我们忘却所有烦恼一切让它随风飘去 —— kygo/Jason Walker《Sunrise》</p><p>10.4 今天突发想听kygo的歌，没想到这首歌居然没有听过，开头的小提琴声就已经吸引到我了，再到高潮部分经典kygo的节奏，眼前好像浮现了一位追梦少年在日月变化下不断前进，亦或是痴情的少年苦苦追寻着爱情。</p><h2 id="cursive">《Cursive》</h2><p>I will never be myself 我再也做不回原来的自己 will never be 我再也回不到从前 I will never be too well 我再也快乐不起来 And we'll be fine there is an end 我们会好起来的痛苦总会结束 —— Billie Marten《Cursive》</p><p>10.19 真的好像碧梨的声音，安静又优雅，什么时候可以和以前一样的快乐呢？却也再也回不到过去，唯有在悲叹中前行。</p><h2 id="waiting-for-love">《Waiting for love》</h2><p>Where there's a will there's a way kind of beautiful 有志者事竟成多美好啊 And every night has its day so magical 每个漫长的夜都有白昼如此神奇 And if there's love in this life there's no obstacle 如果怀有爱意生活相信人生再无困难 That can't be defeated 也再无挫败 —— Avicii《Waiting for love》 1.1 新的一年，重新开始吧，借着a神的歌，希望能有志者事竟成！</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>感想</tag>
      
      <tag>歌词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bs4解析和xpath解析</title>
    <link href="/2022/02/12/python%E7%88%AC%E8%99%AB%E4%B9%8Bbs4%E8%A7%A3%E6%9E%90%E5%92%8Cxpath%E8%A7%A3%E6%9E%90/"/>
    <url>/2022/02/12/python%E7%88%AC%E8%99%AB%E4%B9%8Bbs4%E8%A7%A3%E6%9E%90%E5%92%8Cxpath%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="bs4解析">bs4解析</h1><h2 id="原理">原理:</h2><ul><li>1.实例化一个BeautifulSoup对象，并且将页面源码数据加载到该对象中</li><li>2.通过调用BeautifulSoup对象中相关的属性或者方法进行标签定位和数据提取</li></ul><h2 id="如何实例化beautifulsoup对象">如何实例化BeautifulSoup对象:</h2><p>from bs4 import BeautifulSoup BeautifulSoup(参数一,参数二) 参数一为文件描述符，参数二为解析器，一般为'lxml' 一对象的实例化: - 1.将本地的html文档中的数据加载到该对象中 <figure class="highlight ini"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">fp</span> = open( <span class="hljs-string">&#x27;./test.html&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><span class="hljs-attr">soup</span>=BeautifulSoup(fp,<span class="hljs-string">&#x27;lxml&#x27;</span>)<br></code></pre></td></tr></table></figure> - 2.将互联网上获取的页面源码加载到该对象中 <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">page_text</span> =response.text<br><span class="hljs-attr">soup</span>=BeatifulSoup(page_text,<span class="hljs-string">&#x27;lxml&#x27;</span>)<br></code></pre></td></tr></table></figure> soup指初始化的BeautifulSoup对象</p><h2 id="用于数据解析的方法和属性">用于数据解析的方法和属性:</h2><p><strong>1</strong>.soup.tagName:返回的是文档中<strong>第一次</strong>出现的tagName对应的标签 <strong>2</strong>.soup.find():</p><p>(1).find( 'tagName'):等同于soup.tagName (2).属性定位:soup.find('div',class_/id/或者其他属性='song') 定位到&lt; div class=&quot;song&quot;&gt;/&lt; div id=&quot;song&quot;&gt;的标签下 class如果没有加_则代表关键字</p><p><strong>3</strong>.soup.find_all('tagName'):返回符合要求的所有标签(列表) <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml">soup对象:<br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tang&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.baidu.com&quot;</span> <span class="hljs-attr">title</span>= <span class="hljs-string">&quot;ging&quot;</span>&gt;</span>清明时节雨纷纷,路上行人欲断魂,借问酒家何处有,牧童遥指杏花村<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&lt;/1i&gt;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.163.com&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;qin&quot;</span>&gt;</span>秦时明月汉时关，万里长征人未还,但使龙城飞将在，不教胡马度阴山<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&lt;/1i&gt;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; http://ww.126.com&quot;</span><span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;qi &quot;</span>&gt;</span>歧王宅里寻常见，崔九堂前几度闻，正是江南好风景,落花时节又逢君<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http: //www.sina.com&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;du&quot;</span>&gt;</span>杜甫<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.dudu.com&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;du&quot;</span>&gt;</span>杜牧<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>杜小月<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>度蜜月<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://ww.hana.com”id=&quot;</span><span class="hljs-attr">feng</span>&quot;&gt;</span>凤凰台上凤凰游，凤去台空江自流，吴宫花草埋幽径，晋代衣冠成古丘<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure> <strong>4</strong>.select: - select('某种选择器(id,class，标签...选择器)'),返回的是一个列表。 标签什么都不加，class前面加. id前面加#</p><p>层级选择器: &gt;表示的是一个层级；空格表示的多个层级 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">   soup.select( <span class="hljs-string">&#x27;.tang &gt; ul &gt; li &gt; a&#x27;</span>) <br>   soup.select( <span class="hljs-string">&#x27;.tang &gt;ul a&#x27;</span>)<br>   结果为：[<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.baidu.com&quot;</span> <span class="hljs-attr">title</span>= <span class="hljs-string">&quot;ging&quot;</span>&gt;</span>清明时节雨纷纷,路上行人欲断魂,借问酒家何处有,牧童遥指杏花村<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.163.com&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;qin&quot;</span>&gt;</span>秦时明月汉时关，万里长征人未还,但使龙城飞将在，不教胡马度阴山<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>   <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; http://ww.126.com&quot;</span><span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;qi &quot;</span>&gt;</span>歧王宅里寻常见，崔九堂前几度闻，正是江南好风景,落花时节又逢君<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>   <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http: //www.sina.com&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;du&quot;</span>&gt;</span>杜甫<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>   <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.dudu.com&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;du&quot;</span>&gt;</span>杜牧<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>,<br>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://ww.hana.com”id=&quot;</span><span class="hljs-attr">feng</span>&quot;&gt;</span>凤凰台上凤凰游，凤去台空江自流，吴宫花草埋幽径，晋代衣冠成古丘<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span>]<br></code></pre></td></tr></table></figure> <strong>5</strong>.获取标签之间的文本数据: -soup.a.text/string/get_text() -text/get_text():可以获取某一个标签中所有的文本内容 -string:只可以获取该标签下面直系的文本内容 <strong>6</strong>.获取标签中属性值: soup.a['属性值'] <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(soup.select( <span class="hljs-string">&#x27;.tang &gt; ul &gt; li &gt; a&#x27;</span>)</span></span> <span class="hljs-selector-attr">[0]</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;href&#x27;</span>]</span>)<br>结果：<br>www<span class="hljs-selector-class">.baidu</span>.com<br></code></pre></td></tr></table></figure> # xpath解析 最常用且最便捷高效的一种解析方式。通用性。 ## xpath解析原理: 1.实例化一个etree的对象，且需要将被解析的页面源码数据加载到该对象中。 2调用etree对象中的xpath方法结合着xpath表达式实现标签的定位和内容的捕获。</p><h2 id="实例化一个etree对象">实例化一个etree对象:</h2><p>from lxml import etree -1.将本地的html文档中的源码数据加载到etree对象中: <figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">etree.parse<span class="hljs-comment">(filePath)</span><br></code></pre></td></tr></table></figure> -2.可以将从互联网上获取的源码数据加载到该对象中 <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">etree</span><span class="hljs-selector-class">.HTML</span>( <span class="hljs-string">&#x27;page_text&#x27;</span>)<br></code></pre></td></tr></table></figure> ## xpath( 'xpath表达式') xpath表达式:(返回一个列表) -/:表示的是从根节点开始定位。表示的是一个层级。 -//:表示的是多个层级。可以表示从任意位置开始定位。 -属性定位://div<span class="citation" data-cites="class">[@class='song']</span> tag<span class="citation" data-cites="attrname">[@attrname='attrvalue']</span> -索引定位：//div<span class="citation" data-cites="class">[@class='song']</span>/p[3] 索引从1开始的</p><p>取文本: - /text(）获取的是标签中直系的文本内容 - //text(标签中非直系的文本内容(所有的文本内容)</p><p>取属性: /<span class="citation" data-cites="attrName">@attrName</span><br />eg:/img/<span class="citation" data-cites="src">@src</span></p><p>./表示定位到当前位置（局部解析）</p><p>多个xpath之间用|分割: tree.xpath('//div<span class="citation" data-cites="class">[@class='song']</span>/p[3] | //div<span class="citation" data-cites="class">[@class='song']</span>')</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>bs4</tag>
      
      <tag>xpath</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式和re库</title>
    <link href="/2022/01/31/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2022/01/31/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="相关网站">相关网站</h1><p><a href="https://tool.oschina.net/regex/">正则表达式测试</a> <a href="https://github.com/jackfrued/Python-100-Days/blob/master/Day01-15/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.md">正则表达式部分笔记</a> <a href="https://www.bilibili.com/video/BV1i54y1h75W">b站网课</a></p><h1 id="正则表达式">正则表达式</h1><h2 id="定义">定义</h2><p>一种使用表达式的方式对字符串进行匹配的的语法规则</p><h2 id="使用条件">使用条件</h2><p>在python爬虫中数据解析部分，解析的局部的文本内容都会在标签之间或者标签对应的属性中进行存储，当要对存储的信息进行提取时，就要用到正则表达式。</p><h2 id="语法">语法</h2><p>使用元字符进行排列组合用来匹配字符串</p><h2 id="元字符">元字符</h2><p>具有固定含义的特殊符号（默认匹配一位）</p><table><thead><tr class="header"><th>元字符</th><th style="text-align: left;">含义</th></tr></thead><tbody><tr class="odd"><td>.</td><td style="text-align: left;">匹配除换行符以外的任意字符</td></tr><tr class="even"><td></td><td style="text-align: left;">匹配字母或数字或下划线</td></tr><tr class="odd"><td></td><td style="text-align: left;">匹配任意的空白符</td></tr><tr class="even"><td></td><td style="text-align: left;">匹配数字</td></tr><tr class="odd"><td></td><td style="text-align: left;">匹配一个换行符</td></tr><tr class="even"><td></td><td style="text-align: left;">匹配一个制表符</td></tr><tr class="odd"><td>^</td><td style="text-align: left;">匹配字符串的开始</td></tr><tr class="even"><td>$</td><td style="text-align: left;">匹配字符串的结尾</td></tr><tr class="odd"><td></td><td style="text-align: left;">匹配非字母或数字或下划线</td></tr><tr class="even"><td></td><td style="text-align: left;">匹配非数字</td></tr><tr class="odd"><td></td><td style="text-align: left;">匹配非空白符</td></tr><tr class="even"><td>a|b</td><td style="text-align: left;">匹配字符α或字符b</td></tr><tr class="odd"><td>()</td><td style="text-align: left;">匹配括号内的表达式，也表示一个组</td></tr><tr class="even"><td>[...]</td><td style="text-align: left;">匹配字符组中的字符（a-z代表a到z所有的字母)</td></tr><tr class="odd"><td>[^...]</td><td style="text-align: left;">匹配除了字符组中字符的所有字符</td></tr></tbody></table><h3 id="例子">例子</h3><figure class="highlight taggerscript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs taggerscript">eg：a11111<br>^<span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span> 无匹配结果<br><br>eg：11111a<br><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span><span class="hljs-symbol">\d</span>$ 无匹配结果<br><br>eg：我的电话是：10010<br>[我10]  我 1 0 0 1 0<br></code></pre></td></tr></table></figure><h2 id="量词">量词</h2><p>控制前面的元字符出现的次数</p><table><thead><tr class="header"><th>量词</th><th style="text-align: left;">含义</th></tr></thead><tbody><tr class="odd"><td>*</td><td style="text-align: left;">重复零次或更多次</td></tr><tr class="even"><td>+</td><td style="text-align: left;">重复一次或更多次</td></tr><tr class="odd"><td>？</td><td style="text-align: left;">重复零次或一次</td></tr><tr class="even"><td>{n}</td><td style="text-align: left;">重复n次</td></tr><tr class="odd"><td>{n，}</td><td style="text-align: left;">重复n次或更多次</td></tr><tr class="even"><td>{n，m}</td><td style="text-align: left;">重复n到m次</td></tr></tbody></table><h2 id="匹配模式">匹配模式</h2><p>.* 贪婪匹配 .*?懒惰匹配 在python爬虫中一般使用懒惰匹配</p><h1 id="re模块">re模块</h1><h2 id="函数">函数</h2><p>pattern:正则表达式 ；string：字符串;flags：状态位，可嵌入的规则（re.S,re.M等）</p><table style="width:22%;"><colgroup><col style="width: 12%"><col style="width: 9%"></colgroup><thead><tr class="header"><th>函数</th><th style="text-align: left;">含义</th></tr></thead><tbody><tr class="odd"><td>compile(pattern, flags=0)</td><td style="text-align: left;">编译正则表达式返回正则表达式对象（预加载正则表达式）</td></tr><tr class="even"><td>match(pattern, string, flags=0)</td><td style="text-align: left;">用正则表达式匹配字符串，从头开始匹配 成功返回匹配对象 否则返回None</td></tr><tr class="odd"><td>search(pattern, string, flags=0)</td><td style="text-align: left;">搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None</td></tr><tr class="even"><td>split(pattern, string, maxsplit=0, flags=0)</td><td style="text-align: left;">用正则表达式指定的模式分隔符拆分字符串 返回列表</td></tr><tr class="odd"><td>sub(pattern, repl, string, count=0, flags=0)</td><td style="text-align: left;">用指定的字符串替换原字符串中与正则表达式匹配的模式 可以用count指定替换的次数</td></tr><tr class="even"><td>fullmatch(pattern, string, flags=0)</td><td style="text-align: left;">match函数的完全匹配（从字符串开头到结尾）版本</td></tr><tr class="odd"><td>findall(pattern, string, flags=0)</td><td style="text-align: left;">查找字符串所有与正则表达式匹配的模式 返回字符串的列表</td></tr><tr class="even"><td>finditer(pattern, string, flags=0)</td><td style="text-align: left;">查找字符串所有与正则表达式匹配的模式 返回一个迭代器，从迭代器拿到内容</td></tr><tr class="odd"><td>purge()</td><td style="text-align: left;">清除隐式编译的正则表达式的缓存</td></tr><tr class="even"><td>re.I / re.IGNORECASE</td><td style="text-align: left;">忽略大小写匹配标记</td></tr><tr class="odd"><td>re.M / re.MULTILINE</td><td style="text-align: left;">多行匹配标记</td></tr><tr class="even"><td>re.S</td><td style="text-align: left;">单行匹配标记</td></tr><tr class="odd"><td>（？P&lt;分组名字&gt;正则）</td><td style="text-align: left;">可以单独从正则匹配的内容中进一步提取内容（p要大写）</td></tr></tbody></table><h2 id="例子-1">例子</h2><p>1.findall（）返回列表形式 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">ls=re.fiindall(<span class="hljs-string">r'\d+'</span>,<span class="hljs-string">"我的电话是：10086,他的电话是：10010."</span>)<br><span class="hljs-built_in">print</span>(ls)<br><br><span class="hljs-comment">#['10086','10010']</span><br></code></pre></td></tr></table></figure> 2.finditer()返回迭代器 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">it=re.fiindall(<span class="hljs-string">r'\d+'</span>,<span class="hljs-string">"我的电话是：10086,他的电话是：10010."</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> it:<br><span class="hljs-built_in">print</span>(i.group())<br><br><span class="hljs-comment">#10086</span><br> <span class="hljs-number">10010</span><br></code></pre></td></tr></table></figure> 3.search()返回match对象 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">ls=re.search(<span class="hljs-string">r'\d+'</span>,<span class="hljs-string">"我的电话是：10086,他的电话是：10010."</span>)<br><span class="hljs-built_in">print</span>(ls.group())<br><br><span class="hljs-comment">#10086 </span><br>只返回第一个结果<br></code></pre></td></tr></table></figure> 4.match()从头开始匹配，与search()类似 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">ls=re.match(<span class="hljs-string">r'\d+'</span>,<span class="hljs-string">"10086,他的电话是：10010."</span>)<br><span class="hljs-built_in">print</span>(ls.group())<br><span class="hljs-comment">#10086 </span><br>ls=re.match(<span class="hljs-string">r'\d+'</span>,<span class="hljs-string">"我的电话是：10086,他的电话是：10010."</span>)<br><span class="hljs-built_in">print</span>(ls.group())<br><br><span class="hljs-comment">#报错</span><br><br></code></pre></td></tr></table></figure></p><p>5.compile()预加载正则表达式 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">obj = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r'\d'</span>)<br>ret = obj.finditer(<span class="hljs-string">"我的电话号是:10086，我女朋友的电话是:10010"</span>)<br><span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> ret:<br><span class="hljs-built_in">print</span>(it.group())<br>ret = obj.findall(<span class="hljs-string">"人口1000000"</span>)<br><span class="hljs-built_in">print</span>(ret)<br><br><span class="hljs-comment">#10086 10010</span><br><span class="hljs-comment">#['1000000']</span><br></code></pre></td></tr></table></figure> 6.（？P&lt;分组名字&gt;正则） <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml">s="<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'a'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">'1'</span>&gt;</span>张三<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'b'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">'2'</span>&gt;</span>李四<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'c'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">'3'</span>&gt;</span>王五<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'d'</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">'4'</span>&gt;</span>库里<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'e'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">'5'</span>&gt;</span>汤普森<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>"<br>obj = re.compile(r"<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'.*?'</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">' (?P&lt;id&gt;\d+) '</span>&gt;</span>(?P<span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>.*?)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>",re.S)<br>result = obj.finditer(s)<br>for it in result:<br>print(it.group( "name"))<br>print(it.group("id"))<br><br>#张三 1<br> 李四 2<br> 王五 3<br> 库里 4<br> 汤普森 5<br></code></pre></td></tr></table></figure> 7.re.S 将字符串作为一个整体匹配 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros">a = <span class="hljs-string">"hello123</span><br><span class="hljs-string">world"</span><br>b = re.findall(<span class="hljs-string">'hello(.*?)world'</span>,a)<br>c = re.findall(<span class="hljs-string">'hello(.*?)world'</span>,a,re.S)<br><span class="hljs-builtin-name">print</span> (<span class="hljs-string">'b = '</span> , b)<br><span class="hljs-builtin-name">print</span> (<span class="hljs-string">'c = '</span> , c)<br><br><span class="hljs-comment"># b =[] 空列表</span><br><span class="hljs-comment"># c =['123']</span><br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>正则表达式</tag>
      
      <tag>re库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>写在开始</title>
    <link href="/2022/01/21/hello-world/"/>
    <url>/2022/01/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>世界很大，城市很闹，幸好还有一个无人知晓的博客</p><h2 id="这里有什么">这里有什么</h2><p>这里汇聚了许多无用而且多此一举的个人想法，希望你在这未被开垦过的荒野玩的愉快，欢迎留下足迹！</p><p>IT相关文档和随笔会同步到这，欢迎阅读。 ## 开始 自己生活中总是有着无数思考与想法，想要记录下来，于是便有了创建自己博客的念头。希望今后的某天望着自己的博客，能感到满足与自豪。 ## hello world 原本热爱于生物的我，阴差阳错的选择了计算机专业，第一次用c语言写出hello world，总感觉一个生命由我创造而来，幻想到自己写出庞大复杂的项目...嗯这种感觉真不错，在经过一年的大学学习，逐渐意识到与各类大佬的差距，也努力向上，不希望成为那井底之蛙。这个世界是残酷的，没人会怜悯无用之人。 没点真正的实力，谁又愿意记住你？ ## 最后 在这偌大的互联网，开辟一片属于自己的空间，记录这自己的笔记以及随想。 或许三年后，或许十年后，这里一片荒芜，也有可能繁花似锦，那时的我可能成为自己想要的样子，也有可能一事无成，只是希望不愧青春。 谢谢你读到这，祝你我前程似锦！</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>感想</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
